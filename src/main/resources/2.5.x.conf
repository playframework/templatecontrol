templatecontrol {

  branches += {
    name = "2.5.x"

    # copy the entire contents of the template at the specified path, whether there or not.
    copy = [
      {
        path = "/LICENSE"
        template = "LICENSE.md"
      }
    ]

    # finders look for files and substitute text without replacing the entire file.
    finders = [
      {
        path = "**/src/main/g8/default.properties"
        conversions = {
          "play_version" = """play_version=2.5.15"""
          "scala_version" = """scala_version = 2.11.11"""
          "scalatestplusplay_version" = """scalatestplusplay_version = 2.0.0"""
        }
      },

      {
        path = "**/build.sbt"
        conversions = {

          "scalaVersion" = """scalaVersion := "2.11.11""""

          """"com.typesafe.play" %% "anorm"""" = """libraryDependencies += "com.typesafe.play" %% "anorm" % "2.5.0""""

          """"com.typesafe.play" %% "play-slick"""" = """libraryDependencies += "com.typesafe.play" %% "play-slick" % "2.0.2""""

          """"com.typesafe.play" %% "play-slick-evolutions"""" = """libraryDependencies += "com.typesafe.play" %% "play-slick-evolutions" % "2.0.2""""

          """"com.softwaremill.macwire" %% "macros"""" = """libraryDependencies += "com.softwaremill.macwire" %% "macros" % "2.3.0" % "provided""""

          "scala-guice" = """libraryDependencies += "net.codingwell" %% "scala-guice" % "4.1.0""""

          "gatling-charts-highcharts" = """libraryDependencies += "io.gatling.highcharts" % "gatling-charts-highcharts" % "2.2.2" % Test"""

          "gatling-test-framework" = """libraryDependencies += "io.gatling" % "gatling-test-framework" % "2.2.2" % Test"""

          "play-bootstrap" = """libraryDependencies += "com.adrianhurt" %% "play-bootstrap" % "1.0-P25-B3""""

          "com.h2database" = """libraryDependencies += "com.h2database" % "h2" % "1.4.194""""

          "scalatestplus-play" = """libraryDependencies += "org.scalatestplus.play" %% "scalatestplus-play" % "2.0.0" % Test"""
        }
      },
      {
        path = "**/build.properties"
        conversions = {
          "sbt.version" = "sbt.version=0.13.15"
        }
      },
      {
        path = "**/application.conf"
        conversions = {
          //  'PLAY_DOCS_URL': "http://www.playframework.com/documentation/2.5.x",
        }
      },
      {
        path = "**/plugins.sbt"
        conversions = {
          "sbt-play-enhancer" = """addSbtPlugin("com.typesafe.sbt" % "sbt-play-enhancer" % "1.1.0")"""

          "sbt-plugin" = """addSbtPlugin("com.typesafe.play" % "sbt-plugin" % "2.5.15")"""

          "sbt-coffeescript" = """addSbtPlugin("com.typesafe.sbt" % "sbt-coffeescript" % "1.0.0")"""

          // We can't upgrade to ebean 3.1.0 until ebean-orm/ebean#820 is fixed.
          "sbt-play-ebean" = """addSbtPlugin("com.typesafe.sbt" % "sbt-play-ebean" % "3.0.1")"""

          "sbt-less" = """addSbtPlugin("com.typesafe.sbt" % "sbt-less" % "1.1.0")"""

          "sbt-jshint" = """addSbtPlugin("com.typesafe.sbt" % "sbt-jshint" % "1.0.4")"""

          "sbt-rjs" = """addSbtPlugin("com.typesafe.sbt" % "sbt-rjs" % "1.0.8")"""

          "sbt-digest" = """addSbtPlugin("com.typesafe.sbt" % "sbt-digest" % "1.1.1")"""

          "sbt-mocha" = """addSbtPlugin("com.typesafe.sbt" % "sbt-mocha" % "1.1.0")"""

          "sbt-sassify" = """addSbtPlugin("org.irundaia.sbt" % "sbt-sassify" % "1.4.6")"""
        }
      }
    ]
  }

}
