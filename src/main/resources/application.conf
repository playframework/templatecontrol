
templatecontrol {

  #baseDirectory = ${user.home}"/templates"
  baseDirectory = ${java.io.tmpdir}

  github {
    upstream = "playframework"
    remote = ${?TCONTROL_GITHUB_REMOTE}

    // Github user and outh credentials must be managed out of band
    //
    // You can get an oauth token specifically for this project
    //
    // https://help.github.com/articles/git-automation-with-oauth-tokens/
    // https://help.github.com/articles/creating-an-access-token-for-command-line-use/
    // You want a personal access token with "repo" scope
    credentials {
      user = ${?TCONTROL_GITHUB_USER}
      oauthToken = ${?TCONTROL_GITHUB_OAUTH}
    }

    # Github webhook
    # https://github.com/typesafehub/example-code-service/#github-webhooks-production
    webhook = {
      name = "example-webservice"
      secret = "h0z6a<E;meeYPs:ptueB7Hg09RCbzPG9j;]j>SROKTeV=9>W5i_2BPsiIXzCjIQO"
      config {
        "url" = "https://example.lightbend.com/webhook"
        "content_type" = "json"
      }
    }
  }

  //exampleCodeServiceUrl = "https://example.lightbend.com/v1/api/templates"
  //keywords = [ "play", "2.5.x" ]

  // Specify the Play templates that you want to
  // convert here.  You must have github repos for
  // every template specified here.
  templates = [
    play-java-seed.g8,
    play-scala-seed.g8,

    play-java-starter-example,
    play-scala-starter-example,

    play-java-chatroom-example,
    play-java-compile-di-example,
    play-java-dagger2-example,
    play-java-ebean-example,
    play-java-fileupload-example,
    play-java-jpa-example,
    play-java-rest-api-example,
    play-java-streaming-example,
    play-java-websocket-example,

    play-scala-anorm-example,
    play-scala-chatroom-example,
    play-scala-compile-di-example,
    play-scala-fileupload-example,
    play-scala-isolated-slick-example,
    play-scala-macwire-di-example,
    play-scala-rest-api-example,
    play-scala-secure-session-example,
    play-scala-slick-example,
    play-scala-streaming-example,
    play-scala-tls-example,
    play-scala-websocket-example
  ]

  // The "master" branch in all templates always references the current release version of Play.
  // The "SNAPSHOT" branch always references the nightly build snapshot artifact, i.e. "2.6.0-SNAPSHOT"
  // Older versions are defined by their version explicitly, i.e. "2.4.x", "2.3.x".
  branches += {

    name = "master"
    # copy the entire contents of the template at the specified path, whether there or not.
    copy = [
      {
        path = "/LICENSE"
        template = "/templates/LICENSE.md"
      }
    ]

    # finders look for files and substitute text without replacing the entire file.
    finders = [
      {
        path = "**/src/main/g8/default.properties"
        conversions = {
          "play_version" = """play_version=2.5.14"""
          "scala_version" = """scala_version = 2.11.11"""
          "scalatestplusplay_version" = """scalatestplusplay_version = 2.0.0"""
        }
      },

      {
        path = "**/build.sbt"
        conversions = {

          "scalaVersion" = """scalaVersion := "2.11.11""""

          """"com.typesafe.play" %% "anorm"""" = """libraryDependencies += "com.typesafe.play" %% "anorm" % "2.5.0""""

          """"com.typesafe.play" %% "play-slick"""" = """libraryDependencies += "com.typesafe.play" %% "play-slick" % "2.0.2""""

          """"com.typesafe.play" %% "play-slick-evolutions"""" = """libraryDependencies += "com.typesafe.play" %% "play-slick-evolutions" % "2.0.2""""

          """"com.softwaremill.macwire" %% "util"""" = """libraryDependencies += "com.softwaremill.macwire" %% "util" % "2.2.2""""

          """"com.softwaremill.macwire" %% "proxy"""" = """libraryDependencies += "com.softwaremill.macwire" %% "proxy" % "2.2.2""""

          """"com.softwaremill.macwire" %% "macros"""" = """libraryDependencies += "com.softwaremill.macwire" %% "macros" % "2.2.2" % "provided""""

          "scala-guice" = """libraryDependencies += "net.codingwell" %% "scala-guice" % "4.1.0""""

          "gatling-charts-highcharts" = """libraryDependencies += "io.gatling.highcharts" % "gatling-charts-highcharts" % "2.2.2" % Test"""

          "gatling-test-framework" = """libraryDependencies += "io.gatling" % "gatling-test-framework" % "2.2.2" % Test"""

          "play-bootstrap" = """libraryDependencies += "com.adrianhurt" %% "play-bootstrap" % "1.0-P25-B3""""

          "com.h2database" = """libraryDependencies += "com.h2database" % "h2" % "1.4.194""""

          "scalatestplus-play" = """libraryDependencies += "org.scalatestplus.play" %% "scalatestplus-play" % "2.0.0" % Test"""
        }
      },
      {
        path = "**/build.properties"
        conversions = {
          "sbt.version" = "sbt.version=0.13.15"
        }
      },
      {
        path = "**/application.conf"
        conversions = {
           //  'PLAY_DOCS_URL': "http://www.playframework.com/documentation/2.5.x",
        }
      },
      {
        path = "**/plugins.sbt"
        conversions = {
          "sbt-play-enhancer" = """addSbtPlugin("com.typesafe.sbt" % "sbt-play-enhancer" % "1.1.0")"""

          "sbt-plugin" = """addSbtPlugin("com.typesafe.play" % "sbt-plugin" % "2.5.14")"""

          "sbt-coffeescript" = """addSbtPlugin("com.typesafe.sbt" % "sbt-coffeescript" % "1.0.0")"""

          // We can't upgrade to ebean 3.1.0 until ebean-orm/ebean#820 is fixed.
          "sbt-play-ebean" = """addSbtPlugin("com.typesafe.sbt" % "sbt-play-ebean" % "3.0.1")"""

          "sbt-less" = """addSbtPlugin("com.typesafe.sbt" % "sbt-less" % "1.1.0")"""

          "sbt-jshint" = """addSbtPlugin("com.typesafe.sbt" % "sbt-jshint" % "1.0.4")"""

          "sbt-rjs" = """addSbtPlugin("com.typesafe.sbt" % "sbt-rjs" % "1.0.8")"""

          "sbt-digest" = """addSbtPlugin("com.typesafe.sbt" % "sbt-digest" % "1.1.1")"""

          "sbt-mocha" = """addSbtPlugin("com.typesafe.sbt" % "sbt-mocha" % "1.1.0")"""

          "sbt-sassify" = """addSbtPlugin("org.irundaia.sbt" % "sbt-sassify" % "1.4.6")"""
        }
      }
    ]
  }

  branches += {
    name = "SNAPSHOT"
    # copy the entire contents of the template at the specified path, whether there or not.
    copy = [
      {
        path = "/LICENSE"
        template = "/templates/LICENSE.md"
      }
    ]

    # finders look for files and substitute text without replacing the entire file.
    finders = [
      {
        path = "**/build.sbt"
        conversions = {

          # The anorm project does not use 2.12.1 because anorm 2.5.3 is not out for it
          "scalaVersion" = """scalaVersion := "2.12.2""""

          """"com.typesafe.play" %% "anorm"""" = """libraryDependencies += "com.typesafe.play" %% "anorm" % "2.5.3""""

          """"com.typesafe.play" %% "play-slick"""" = """libraryDependencies += "com.typesafe.play" %% "play-slick" %  "3.0.0-M3""""

          """"com.typesafe.play" %% "play-slick-evolutions"""" = """libraryDependencies += "com.typesafe.play" %% "play-slick-evolutions" % "3.0.0-M3""""

          """"com.softwaremill.macwire" %% "util"""" = """libraryDependencies += "com.softwaremill.macwire" %% "util" % "2.3.0""""

          """"com.softwaremill.macwire" %% "proxy"""" = """libraryDependencies += "com.softwaremill.macwire" %% "proxy" % "2.3.0""""

          """"com.softwaremill.macwire" %% "macros"""" = """libraryDependencies += "com.softwaremill.macwire" %% "macros" % "2.3.0" % "provided""""

          "scala-guice" = """libraryDependencies += "net.codingwell" %% "scala-guice" % "4.1.0""""

          "gatling-charts-highcharts" = """libraryDependencies += "io.gatling.highcharts" % "gatling-charts-highcharts" % "2.2.2" % Test"""

          "gatling-test-framework" = """libraryDependencies += "io.gatling" % "gatling-test-framework" % "2.2.2" % Test"""

          "com.h2database" = """libraryDependencies += "com.h2database" % "h2" % "1.4.194""""

          "scalatestplus-play" = """libraryDependencies += "org.scalatestplus.play" %% "scalatestplus-play" % "3.0.0-M3" % Test"""
        }
      },
      {
        path = "**/build.properties"
        conversions = {
          "sbt.version" = "sbt.version=0.13.15"
        }
      },
      {
        path = "**/application.conf"
        conversions = {
           //  'PLAY_DOCS_URL': "http://www.playframework.com/documentation/2.6.x",
        }
      },
      {
        path = "**/plugins.sbt"
        conversions = {
          "sbt-play-enhancer" = """addSbtPlugin("com.typesafe.sbt" % "sbt-play-enhancer" % "1.1.0")"""

          "sbt-plugin" = """addSbtPlugin("com.typesafe.play" % "sbt-plugin" % "2.6.0-M4")"""

          "sbt-coffeescript" = """addSbtPlugin("com.typesafe.sbt" % "sbt-coffeescript" % "1.0.0")"""

          "sbt-play-ebean" = """addSbtPlugin("com.typesafe.sbt" % "sbt-play-ebean" % "4.0.0-M2")"""

          "sbt-less" = """addSbtPlugin("com.typesafe.sbt" % "sbt-less" % "1.1.0")"""

          "sbt-jshint" = """addSbtPlugin("com.typesafe.sbt" % "sbt-jshint" % "1.0.4")"""

          "sbt-rjs" = """addSbtPlugin("com.typesafe.sbt" % "sbt-rjs" % "1.0.8")"""

          "sbt-digest" = """addSbtPlugin("com.typesafe.sbt" % "sbt-digest" % "1.1.1")"""

          "sbt-mocha" = """addSbtPlugin("com.typesafe.sbt" % "sbt-mocha" % "1.1.0")"""

          "sbt-sassify" = """addSbtPlugin("org.irundaia.sbt" % "sbt-sassify" % "1.4.6")"""
        }
      }
    ]
  }
}

